#!/usr/bin/perl
use strict;
use warnings;
use feature     qw(say);
use autodie;
use Encode      qw(decode);
use POSIX       qw(strftime);
use Term::ReadLine;
use Time::HiRes qw(gettimeofday tv_interval);
use InvertedIndex;


my $docs  = shift // 'training.txt';
my $stash = "$docs.stash";


say 'Building index...';
my $start = time;
my $index = InvertedIndex->new;
open my $fh, '<', $docs;

say "Trying to unstash $stash...";
unless ($index->unstash($stash))
{
    say "Indexing $docs...";
    for (1 .. 100)
    {
        my $id       = tell $fh;
        my $document = <$fh> // last;
        $index->index($id, decode 'UTF-8' => $document);
    }

    say 'Stashing...';
    $index->stash($stash);
}

say strftime 'Index built after %M:%S' => gmtime(time - $start);


my $term = Term::ReadLine->new('InvertedIndex');
while (defined($_ = $term->readline('query: ')))
{
    my @start = gettimeofday;
    my @query = split ' ', decode 'UTF-8' => $_;

    if (@query)
    {
        my $row = $index->fetch(@query)->toArray;
        for (@$row)
        {
            seek $fh, $_, 0;
            print $_, "\t", scalar <$fh>;
        }
        say scalar @$row, ' results in ', tv_interval(\@start), ' seconds';
    }
}


say "\nCleaning up, this may take a bit...";
